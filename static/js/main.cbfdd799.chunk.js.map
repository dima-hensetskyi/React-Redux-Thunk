{"version":3,"sources":["redux/types.js","redux/actions/app-actions.js","redux/actions/add-user-actions.js","components/StyleComponents/StyledComponents.js","components/Users/User.js","components/Users/Users.js","components/Alert.js","components/Users/addUserForm.js","redux/actions/add-post-actions.js","components/Post/Post.js","components/Post/Posts.js","components/Post/postsForm.js","Router.js","App.js","reportWebVitals.js","redux/reducer/add-user-reducer.js","redux/reducer/app-reducer.js","redux/reducer/posts-reducer.js","redux/reducer/rootReducer.js","index.js"],"names":["ADD_USER","FETCH_USERS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","DOWNLOAD_USERS","DOWNLOAD_POSTS","CREATE_POST","FETCH_POSTS","SET_VALUE_BUTTONS","showLoader","type","hideLoader","showAlert","text","typeAlert","dispatch","payload","setTimeout","downloadPosts","url","fetchUsers","a","fetch","response","json","data","color","randomColorUser","Math","floor","random","length","randomColor","TextField","styled","input","CardColorAddUser","div","Card","UserCard","SubmitBtn","button","User","name","username","avatar","id","className","src","alt","Users","useDispatch","usersData","useSelector","state","users","loading","app","download","downloadUsers","useEffect","CircularProgress","map","user","index","key","Alerts","Alert","severity","addUserForm","props","resetInput","setState","changeInputHendler","event","prev","target","value","submitHendler","e","validUrl","test","newUser","addUsers","pattern","required","placeholder","this","onChange","onClick","alert","React","Component","mapDispatchToProps","method","headers","body","JSON","stringify","fetched","success","connect","addUserSuccess","setValueButtons","addButton","buttonValue","buttonType","Post","author","content","image","comment","share","like","addcomment","addshare","addlike","classes","useStyles","mounth","Date","getMonth","day","getDate","correctMounth","Intl","DateTimeFormat","month","format","hendler","Accordion","root","AccordionSummary","expandIcon","aria-controls","heading","Typography","component","AccordionDetails","makeStyles","theme","width","backgroundColor","border","marginBottom","marginTop","height","Posts","postsData","posts","downloadPost","post","find","userId","postInformation","PostForm","newPost","console","log","createPost","FormControl","InputLabel","htmlFor","Select","native","inputProps","aria-label","FormHelperText","Routers","to","activeClassName","path","App","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","actions","correctPosts","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbfdd799.chunk.js","sourcesContent":["export const ADD_USER = 'USERS/ADD_USER';\r\nexport const FETCH_USERS = 'USERS/FETCH_USERS';\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\r\nexport const DOWNLOAD_USERS = 'APP/DOWNLOAD_USERS';\r\nexport const DOWNLOAD_POSTS = 'APP/DOWNLOAD_POSTS';\r\nexport const CREATE_POST = 'POSTS/CREATE_POST';\r\nexport const FETCH_POSTS = 'POSTS/FETCH_POSTS';\r\nexport const SET_VALUE_BUTTONS = 'POSTS/SET_VALUE_BUTTONS';\r\n","import {\r\n  DOWNLOAD_USERS,\r\n  HIDE_LOADER,\r\n  SHOW_LOADER,\r\n  SHOW_ALERT,\r\n  HIDE_ALERT,\r\n  DOWNLOAD_POSTS,\r\n} from '../types';\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\nexport function showAlert(text, typeAlert) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: text,\r\n      typeAlert,\r\n    });\r\n    setTimeout(() => {\r\n      dispatch(hideAlert());\r\n    }, 3000);\r\n  };\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT,\r\n  };\r\n}\r\n\r\nexport function downloadUsers() {\r\n  return {\r\n    type: DOWNLOAD_USERS,\r\n  };\r\n}\r\nexport function downloadPosts() {\r\n  return {\r\n    type: DOWNLOAD_POSTS,\r\n  };\r\n}\r\n","import { ADD_USER, FETCH_USERS } from '../types';\r\nimport { hideLoader, showLoader, downloadUsers, showAlert } from './app-actions';\r\n\r\nconst url = ' http://domer.tech:9999/users/';\r\n\r\nexport const addUsers = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const fetched = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n      });\r\n      const data = await fetched.json();\r\n      data.success\r\n        ? dispatch(showAlert('User successfully added'))\r\n        : dispatch(showAlert('No user added. Something went wrong.', 'error'));\r\n      dispatch({ type: ADD_USER, payload: user });\r\n    } catch (e) {\r\n      dispatch(showAlert('Something went wrong...', 'warning'));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n};\r\nexport const fetchUsers = () => {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    dispatch({ type: FETCH_USERS, payload: data.data });\r\n    setTimeout(() => {\r\n      dispatch(downloadUsers());\r\n      dispatch(hideLoader());\r\n    }, 700);\r\n  };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst color = [\r\n  'linear-gradient(60deg, #66bb6a, #43a047)',\r\n  'linear-gradient(60deg, #ffa726, #fb8c00)',\r\n  'linear-gradient(60deg, #ef5350, #e53935)',\r\n];\r\nconst randomColorUser = Math.floor(Math.random() * color.length);\r\nconst randomColor = Math.floor(Math.random() * color.length);\r\n\r\nexport const TextField = styled.input`\r\n  margin 5px;\r\n  width: 100%;\r\n  height: 5vh;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #212529;\r\n  background-color: #fff;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  outline: none !important;\r\n  :focus {\r\n    color: #212529;\r\n    background-color: #fff;\r\n    border-color: #86b7fe;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);\r\n  }\r\n  :invalid:not(:focus):not(:placeholder-shown) {\r\n    background: pink;\r\n  }\r\n  :not(:placeholder-shown) { \r\n    :valid {\r\n      border: 1px solid greenyellow;\r\n    }\r\n    :invalid{\r\n      border: 1px solid red;\r\n    }\r\n  }\r\n`;\r\nexport const CardColorAddUser = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  margin: -30px 100px 5px -170px;\r\n  background: ${color[randomColorUser]};\r\n  box-shadow: 0 4px 20px 0 rgb(0 0 0 / 14%), 0 7px 10px -5px rgb(76 175 80 / 40%);\r\n  height: 60px;\r\n  width: 60px;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  color: rgba(0, 0, 0, 0.87);\r\n  width: 40vw;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  position: relative; \r\n  font-size: .875rem;\r\n  min-width: 0;\r\n  background: #FFF;\r\n  box-shadow: 0 1px 4px 0 rgb(0 0 0 / 14%);\r\n  margin-top: 30px;\r\n  border-radius: 6px;\r\n  margin-bottom: 30px;\r\n}\r\n`;\r\n\r\nexport const UserCard = styled.div`\r\n  color: white;\r\n  width: 35vw; \r\n  height: 15vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  position: relative; \r\n  min-width: 0;\r\n  background: ${color[randomColor]};\r\n  box-shadow: 0 4px 20px 0 rgb(0 0 0 / 14%),\r\n    0 7px 10px -5px rgb(76 175 80 / 40%);\r\n  margin-top: 30px;\r\n  border-radius: 6px;\r\n  margin-bottom: 30px;\r\n  font-size: 140%;\r\n}\r\n`;\r\nexport const SubmitBtn = styled.button`\r\n  margin 10px;\r\n  min-width: 64px;\r\n  width: 15vw;\r\n  background-color: #3f51b5;\r\n  color: #fff;\r\n  font-size: 1rem;\r\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  outline: none !important;\r\n  padding: 6px 16px;\r\n  box-sizing: border-box;\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  line-height: 1.75;\r\n  border-radius: 4px;\r\n  letter-spacing: 0.02857em;\r\n  border: none;\r\n  :hover {\r\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\r\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n    background-color: #303f9f;\r\n  }\r\n  :active {\r\n    box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%),\r\n      0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { UserCard } from '../StyleComponents/StyledComponents';\r\n\r\nimport './userForm.css';\r\n\r\nconst User = ({ name, username, avatar, id }) => (\r\n  <UserCard>\r\n    <div className=\"author\">\r\n      <img className=\"user-photo\" src={avatar} alt={`autor ${name}`}></img>\r\n      <div className=\"info\">\r\n        <p>\r\n          Name: <span className=\"name\">{name}</span>\r\n        </p>\r\n        <p className=\"autor-information\">\r\n          Nickname:<span className=\"name\">{` @${username}`}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </UserCard>\r\n);\r\n\r\nexport default User;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { fetchUsers } from '../../redux/actions/add-user-actions';\r\nimport { useEffect } from 'react';\r\n\r\nimport User from './User';\r\n\r\nimport './userForm.css';\r\nconst Users = () => {\r\n  const dispatch = useDispatch();\r\n  const usersData = useSelector((state) => state.users.users);\r\n  const loading = useSelector((state) => state.app.loading);\r\n  const download = useSelector((state) => state.app.downloadUsers);\r\n\r\n  useEffect(() => {\r\n    if (!download) {\r\n      dispatch(fetchUsers());\r\n    }\r\n  }, [download]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"users-list\">\r\n      {usersData.map((user, index) => (\r\n        <User {...user} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport const Alerts = ({ text, typeAlert }) => <Alert severity={typeAlert}>{text}</Alert>;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Alerts } from '../Alert';\r\nimport { addUsers } from '../../redux/actions/add-user-actions';\r\nimport { showAlert } from '../../redux/actions/app-actions';\r\n\r\nimport { Card, TextField, SubmitBtn, CardColorAddUser } from '../StyleComponents/StyledComponents';\r\nimport './userForm.css';\r\n\r\nclass addUserForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      username: '',\r\n      avatar: '',\r\n    };\r\n  }\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      name: '',\r\n      username: '',\r\n      avatar: '',\r\n    });\r\n  };\r\n\r\n  changeInputHendler = (event) => {\r\n    this.setState((prev) => ({\r\n      ...prev,\r\n      ...{ [event.target.name]: event.target.value },\r\n    }));\r\n  };\r\n\r\n  submitHendler = (e) => {\r\n    const { username, avatar, name } = this.state;\r\n    const validUrl = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(avatar);\r\n    const validUser = name.length > 2 || username.length > 2;\r\n    if (!validUser || !validUrl) {\r\n      return this.props.showAlert(\r\n        'The information you entered is incorrect. Try again with different info.',\r\n        'warning'\r\n      );\r\n    }\r\n    const newUser = {\r\n      name,\r\n      username,\r\n      avatar,\r\n    };\r\n    this.props.addUsers(newUser);\r\n    this.resetInput();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-user-form\">\r\n        <Card>\r\n          <CardColorAddUser>\r\n            <span className=\"material-icons\">manage_accounts</span>\r\n          </CardColorAddUser>\r\n          <h1>Add new user</h1>\r\n          <TextField\r\n            pattern=\".{3,}\"\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Name*\"\r\n            value={this.state.name}\r\n            onChange={this.changeInputHendler}\r\n            name=\"name\"\r\n          />\r\n          <TextField\r\n            pattern=\".{3,}\"\r\n            placeholder=\"Nickname*\"\r\n            value={this.state.username}\r\n            onChange={this.changeInputHendler}\r\n            name=\"username\"\r\n            required\r\n          />\r\n          <TextField\r\n            placeholder=\"Link for avatar*\"\r\n            value={this.state.avatar}\r\n            onChange={this.changeInputHendler}\r\n            name=\"avatar\"\r\n            type=\"url\"\r\n            required\r\n          />\r\n          <SubmitBtn onClick={this.submitHendler}>Submit</SubmitBtn>\r\n        </Card>\r\n        <div className=\"alert\">\r\n          {this.props.alert && <Alerts text={this.props.alert} typeAlert={this.props.typeAlert} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  addUserSuccess: state.users.success,\r\n  alert: state.app.alert,\r\n  typeAlert: state.app.typeAlert,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addUsers,\r\n  showAlert,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(addUserForm);\r\n","import { CREATE_POST, FETCH_POSTS, SET_VALUE_BUTTONS } from '../types';\r\nimport { hideLoader, showLoader, showAlert } from './app-actions';\r\n\r\nconst url = 'http://domer.tech:9999/tweets/';\r\n\r\nexport function createPost(post) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const fetched = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(post),\r\n      });\r\n      const response = await fetched.json();\r\n\r\n      response.success\r\n        ? dispatch(showAlert('Post successfully added'))\r\n        : dispatch(showAlert('No post added. Something went wrong.', 'error'));\r\n      dispatch({ type: CREATE_POST, payload: post });\r\n    } catch (e) {\r\n      dispatch(showAlert('Something went wrong...', 'warning'));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    dispatch({ type: FETCH_POSTS, payload: data.data });\r\n    setTimeout(() => {\r\n      dispatch(hideLoader());\r\n    }, 700);\r\n  };\r\n};\r\n\r\nexport const setValueButtons = (id, addButton, buttonValue, buttonType) => {\r\n  return {\r\n    type: SET_VALUE_BUTTONS,\r\n    payload: { id, addButton, buttonValue, buttonType },\r\n  };\r\n};\r\n","import { React } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  makeStyles,\r\n} from '@material-ui/core/';\r\n\r\nimport './Post.css';\r\n\r\nimport { setValueButtons } from '../../redux/actions/add-post-actions';\r\n\r\nconst Post = ({\r\n  author,\r\n  content,\r\n  image,\r\n  comment = 0,\r\n  share = 0,\r\n  like = 0,\r\n  id,\r\n  addcomment = false,\r\n  addshare = false,\r\n  addlike = false,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const mounth = new Date().getMonth();\r\n  const day = new Date().getDate();\r\n  const options = { month: 'long' };\r\n  const correctMounth = new Intl.DateTimeFormat('en-US', options).format(mounth);\r\n\r\n  const hendler = (event) => {\r\n    const buttonType = event.target.id;\r\n\r\n    switch (buttonType) {\r\n      case 'comment':\r\n        dispatch(setValueButtons(id, addcomment, comment, buttonType));\r\n        break;\r\n      case 'share':\r\n        dispatch(setValueButtons(id, addshare, share, buttonType));\r\n        break;\r\n      case 'like':\r\n        dispatch(setValueButtons(id, addlike, like, buttonType));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion className={classes.root}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n        className={classes.heading}\r\n      >\r\n        <Typography className={classes.heading} component={'div'}>\r\n          <div className=\"author\">\r\n            <img src={author.avatar} alt=\"author\" />\r\n            <p className=\"name\">{author.name}</p>\r\n            <p className=\"autor-information\">{`${author.username}`}</p>\r\n            <p className=\"autor-information\">{`•`}</p>\r\n            <p className=\"autor-information\">{`${day} ${correctMounth}`}</p>\r\n          </div>\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography component={'div'}>\r\n          <div className=\"content\">\r\n            <p className=\"content-text\">{content}</p>\r\n            <img src={image} alt={`post content`} />\r\n          </div>\r\n          <div className=\"badges\">\r\n            <span id=\"comment\" className=\"badg\" onClick={hendler}>\r\n              <i id=\"comment\" className=\"far fa-comment-alt\"></i>\r\n              {comment}\r\n            </span>\r\n            <span id=\"share\" className=\"badg\" onClick={hendler}>\r\n              <i id=\"share\" className=\"fas fa-share-alt\"></i>\r\n              {share}\r\n            </span>\r\n            <span id=\"like\" className=\"badg\" onClick={hendler}>\r\n              {addlike ? (\r\n                <i id=\"like\" className=\"fas fa-heart\"></i>\r\n              ) : (\r\n                <i id=\"like\" className=\"far fa-heart\"></i>\r\n              )}\r\n              {like}\r\n            </span>\r\n            <span id=\"forward\" className=\"badg\" onClick={hendler}>\r\n              <i id=\"forward\" className=\"far fa-share-square\"></i>\r\n            </span>\r\n          </div>\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Post;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '600px',\r\n    color: '#fff',\r\n    backgroundColor: '#1976d2',\r\n    border: '0',\r\n    marginBottom: '20px',\r\n    marginTop: '10px',\r\n  },\r\n  heading: {\r\n    height: '85px',\r\n  },\r\n}));\r\n","import { React, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { fetchPosts } from '../../redux/actions/add-post-actions';\r\nimport { fetchUsers } from '../../redux/actions/add-user-actions';\r\nimport { downloadPosts } from '../../redux/actions/app-actions';\r\n\r\nimport Post from './Post';\r\n\r\nimport './Post.css';\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n  const postsData = useSelector((state) => state.posts.posts);\r\n  const users = useSelector((state) => state.users.users);\r\n  const downloadUsers = useSelector((state) => state.app.downloadUsers);\r\n  const downloadPost = useSelector((state) => state.app.downloadPosts);\r\n  const loading = useSelector((state) => state.app.loading);\r\n\r\n  useEffect(() => {\r\n    if (!downloadUsers) {\r\n      dispatch(fetchUsers());\r\n    }\r\n    if (!downloadPost) {\r\n      dispatch(downloadPosts());\r\n      dispatch(fetchPosts());\r\n    }\r\n  }, [downloadPosts]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts-list\">\r\n      {postsData.map((post) => {\r\n        const user = users.find((user) => user.id === post.userId);\r\n        if (user) {\r\n          const postInformation = { ...post, author: user };\r\n          return <Post {...postInformation} key={post.id} />;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { InputLabel, FormHelperText, FormControl, Select } from '@material-ui/core/';\r\n\r\nimport { showAlert } from '../../redux/actions/app-actions';\r\nimport { fetchUsers } from '../../redux/actions/add-user-actions';\r\nimport { createPost } from '../../redux/actions/add-post-actions';\r\n\r\nimport { Alerts } from '../Alert';\r\n\r\nimport { Card, CardColorAddUser, TextField, SubmitBtn } from '../StyleComponents/StyledComponents';\r\nimport './Post.css';\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: '',\r\n      image: '',\r\n      userId: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.downloadUsers) {\r\n      this.props.fetchUsers();\r\n    }\r\n  }\r\n\r\n  changeInputHendler = (event) => {\r\n    this.setState((prev) => ({\r\n      ...prev,\r\n      ...{ [event.target.name]: event.target.value },\r\n    }));\r\n  };\r\n  resetInput = () => {\r\n    this.setState({\r\n      content: '',\r\n      image: '',\r\n      userId: '',\r\n    });\r\n  };\r\n\r\n  submitHendler = (e) => {\r\n    const { content, image, userId } = this.state;\r\n    const validUrl = /^(ftp|http|https):\\/\\/[^ \"]+$/.test(image);\r\n    const validContent = content.length > 2;\r\n    if (!validContent || !validUrl || !userId) {\r\n      return this.props.showAlert(\r\n        'The information you entered is incorrect. Try again with different info.',\r\n        'warning'\r\n      );\r\n    }\r\n    const newPost = {\r\n      content,\r\n      image,\r\n      userId: +userId,\r\n    };\r\n    console.log(newPost);\r\n    this.props.createPost(newPost);\r\n    this.resetInput();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"post-form\">\r\n        <Card>\r\n          <CardColorAddUser>\r\n            <span className=\"material-icons\">post_add</span>\r\n          </CardColorAddUser>\r\n          <h1>Add new Post</h1>\r\n          <FormControl required className=\"select\">\r\n            <InputLabel htmlFor=\"user\">User</InputLabel>\r\n            <Select\r\n              native\r\n              value={this.state.user}\r\n              onChange={this.changeInputHendler}\r\n              name=\"userId\"\r\n              inputProps={{\r\n                id: 'user',\r\n              }}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              {this.props.users.map((user) => (\r\n                <option value={user.id} key={user.id}>\r\n                  {user.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            <FormHelperText>Pick user</FormHelperText>\r\n          </FormControl>\r\n          <TextField\r\n            pattern=\".{5,}\"\r\n            placeholder=\"Write you tweet*\"\r\n            value={this.state.content}\r\n            onChange={this.changeInputHendler}\r\n            name=\"content\"\r\n            required\r\n          />\r\n          <TextField\r\n            placeholder=\"Link for image*\"\r\n            value={this.state.image}\r\n            onChange={this.changeInputHendler}\r\n            name=\"image\"\r\n            type=\"url\"\r\n            required\r\n          />\r\n          <SubmitBtn onClick={this.submitHendler}>Submit</SubmitBtn>\r\n        </Card>\r\n        <div className=\"alert\">\r\n          {this.props.alert && <Alerts text={this.props.alert} typeAlert={this.props.typeAlert} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  downloadUsers: state.app.downloadUsers,\r\n  users: state.users.users,\r\n  addUserSuccess: state.users.success,\r\n  alert: state.app.alert,\r\n  typeAlert: state.app.typeAlert,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createPost,\r\n  showAlert,\r\n  fetchUsers,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import { HashRouter as Router, NavLink, Route, Switch } from 'react-router-dom';\r\n\r\nimport Users from './components/Users/Users';\r\nimport addUserForm from './components/Users/addUserForm';\r\nimport Posts from './components/Post/Posts';\r\nimport PostForm from './components/Post/postsForm';\r\n\r\nconst Routers = () => (\r\n  <Router>\r\n    <nav className=\"nav-panel\">\r\n      <NavLink to=\"/users\" className=\"app-link\" activeClassName=\"active-link\">\r\n        Users\r\n      </NavLink>\r\n      <NavLink to=\"/addUser\" className=\"app-link\" activeClassName=\"active-link\">\r\n        Add User\r\n      </NavLink>\r\n      <NavLink to=\"/tweets\" className=\"app-link\" activeClassName=\"active-link\">\r\n        Tweets\r\n      </NavLink>\r\n      <NavLink to=\"/add-tweet\" className=\"app-link\" activeClassName=\"active-link\">\r\n        Add tweet\r\n      </NavLink>\r\n    </nav>\r\n\r\n    <Switch>\r\n      <Route path=\"/users\" component={Users} />\r\n      <Route path=\"/addUser\" component={addUserForm} />\r\n      <Route path=\"/tweets\" component={Posts} />\r\n      <Route path=\"/add-tweet\" component={PostForm} />\r\n      <Route path=\"/\" component={addUserForm}></Route>\r\n    </Switch>\r\n  </Router>\r\n);\r\nexport default Routers;\r\n","import React from 'react';\n\nimport Routers from './Router';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routers />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_USER, FETCH_USERS } from '../types';\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport const addUser = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case ADD_USER:\r\n      return { ...state, users: [...state.users, actions.payload] };\r\n    case FETCH_USERS:\r\n      return { ...state, users: [...state.users, ...actions.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  DOWNLOAD_USERS,\r\n  HIDE_LOADER,\r\n  SHOW_LOADER,\r\n  SHOW_ALERT,\r\n  HIDE_ALERT,\r\n  DOWNLOAD_POSTS,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  downloadUsers: false,\r\n  downloadPosts: false,\r\n  alert: null,\r\n  typeAlert: '',\r\n};\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    case SHOW_ALERT:\r\n      return { ...state, alert: action.payload, typeAlert: action.typeAlert };\r\n    case HIDE_ALERT:\r\n      return { ...state, alert: null };\r\n    case DOWNLOAD_USERS:\r\n      return { ...state, downloadUsers: true };\r\n    case DOWNLOAD_POSTS:\r\n      return { ...state, downloadPosts: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_VALUE_BUTTONS, CREATE_POST, FETCH_POSTS } from '../types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n};\r\n\r\nexport const postsReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case CREATE_POST:\r\n      return { ...state, posts: [...state.posts, actions.payload] };\r\n    case FETCH_POSTS:\r\n      return { ...state, posts: [...state.posts, ...actions.payload] };\r\n    case SET_VALUE_BUTTONS:\r\n      const correctPosts = state.posts.map((post) => {\r\n        let { id, addButton, buttonValue, buttonType } = actions.payload;\r\n        if (post.id === id) {\r\n          if (addButton) {\r\n            buttonValue -= 1;\r\n            addButton = false;\r\n            return {\r\n              ...post,\r\n              [`${buttonType}`]: buttonValue,\r\n              [`add${buttonType}`]: addButton,\r\n            };\r\n          } else {\r\n            buttonValue += 1;\r\n            addButton = true;\r\n            return {\r\n              ...post,\r\n              [buttonType]: buttonValue,\r\n              [`add${buttonType}`]: addButton,\r\n            };\r\n          }\r\n        } else {\r\n          return post;\r\n        }\r\n      });\r\n      return { ...state, posts: correctPosts };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { addUser } from './add-user-reducer';\r\nimport { appReducer } from './app-reducer';\r\nimport { postsReducer } from './posts-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  users: addUser,\r\n  app: appReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './redux/reducer/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}